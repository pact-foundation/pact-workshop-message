name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}
jobs:

# Job to determine which projects have changed
  changes:
    runs-on: ubuntu-latest
    outputs:
      rust: ${{ steps.changes_rust.outputs.src }}
      dotnet: ${{ steps.changes_dotnet.outputs.src }}
      go: ${{ steps.changes_go.outputs.src }}
      java: ${{ steps.changes_java.outputs.src }}
      js: ${{ steps.changes_js.outputs.src }}
      python: ${{ steps.changes_python.outputs.src }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes_rust
        name: check changes rust
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-rust-**/**'
      - uses: dorny/paths-filter@v3
        id: changes_dotnet
        name: check changes dotnet
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-dotnet-**/**'
      - uses: dorny/paths-filter@v3
        id: changes_go
        name: check changes go
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-go-**/**'
      - uses: dorny/paths-filter@v3
        id: changes_java
        name: check changes java
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-java-**/**'
      - uses: dorny/paths-filter@v3
        id: changes_js
        name: check changes javascript
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-js-**/**'
      - uses: dorny/paths-filter@v3
        id: changes_python
        name: check changes python
        with:
          base: main
          ref: ${{ github.sha }}
          filters: |
            src:
              - '**-python-**/**'

  test:
    name: ${{matrix.project}}-${{matrix.os}}
    if: ${{ needs.changes.outputs.rust == 'true' || needs.changes.outputs.dotnet == 'true' || needs.changes.outputs.go == 'true' || needs.changes.outputs.java == 'true' || needs.changes.outputs.js == 'true' || needs.changes.outputs.python == 'true' }}
    needs: changes
    strategy:
      matrix:
        os: 
          - ubuntu-latest
          - windows-latest
          - macos-13
          - macos-14
        include:
          - project: rust
            if: ${{ needs.changes.outputs.rust == 'true' }}
          - project: dotnet
            if: ${{ needs.changes.outputs.dotnet == 'true' }}
          - project: go
            if: ${{ needs.changes.outputs.go == 'true' }}
          - project: java
            if: ${{ needs.changes.outputs.java == 'true' }}
          - project: js
            if: ${{ needs.changes.outputs.js == 'true' }}
          - project: python
            if: ${{ needs.changes.outputs.python == 'true' }}
      fail-fast: false
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        if: ${{ matrix.project == 'rust' }}
        with:
          cache: false
      - uses: actions/setup-go@v5
        if: ${{ matrix.project == 'go' }}
        with:
          go-version: '^1.22.x'
          cache-dependency-path: |
                consumer-go-kafka/go.sum
                provider-go-kafka/go.sum
      - name: setup librdkafka windows
        if: ${{ matrix.os == 'windows-latest' && matrix.project == 'go' }}
        shell: powershell
        run: |
          cd consumer-go-kafka
          go mod tidy
          PowerShell -NoProfile -ExecutionPolicy Unrestricted -Command "& {Start-Process PowerShell -ArgumentList '-NoProfile -ExecutionPolicy Unrestricted -File ""D:\a\pact-workshop-message\pact-workshop-message\consumer-go-kafka\setup_rdkafka.ps1""' -Verb RunAs}";
          "CGO_ENABLED=1" >> $env:GITHUB_ENV
          "CGO_LDFLAGS=-L$env:TMP -lrdkafka" >> $env:GITHUB_ENV
          "$env:TMP" >> $env:GITHUB_PATH
      - uses: actions/setup-dotnet@v4
        if: ${{ matrix.project == 'dotnet' }}
        with:
          dotnet-version: '8.x.x'
      - uses: actions/setup-java@v4
        if: ${{ matrix.project == 'java' }}
        with:
          distribution: 'zulu'
          java-version: '17'
      - uses: actions/setup-node@v4
        if: ${{ matrix.project == 'js' }}
        with:
          node-version: 20
      - uses: actions/setup-python@v5
        if: ${{ matrix.project == 'python' }}
        with:
          python-version: '3.11.5'
      - name: install (consumer)
        run: make install
        if: ${{matrix.project == 'js'||matrix.project == 'go'||matrix.project == 'python'}}
        working-directory: consumer-${{matrix.project}}-kafka
      - name: pact test (consumer)
        run: |
          if [ "${{ matrix.project }}" == "python" ]; then
              if [ "${{ matrix.os }}" == "windows-latest" ]; then
                source $(poetry env info --path)/Scripts/activate
                python -m pytest -s
              else
                source $(poetry env info --path)/bin/activate
                make test
              fi
          else
            make test
          fi
        working-directory: consumer-${{matrix.project}}-kafka
      - name: install (provider)
        run: make install
        if: ${{matrix.project == 'js'||matrix.project == 'go'||matrix.project == 'python'}}
        working-directory: provider-${{matrix.project}}-kafka
      - name: pact verification (provider)
        run: |
          if [ "${{ matrix.project }}" == "python" ]; then
              if [ "${{ matrix.os }}" == "windows-latest" ]; then
                source $(poetry env info --path)/Scripts/activate
                python -m pytest -s
              else
                source $(poetry env info --path)/bin/activate
                make test
              fi
          else
            make test
          fi
        working-directory: provider-${{matrix.project}}-kafka
